{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49],"program":"/Users/henrique/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","approx","/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=d34ef159aa3fa2d9","-C","extra-filename=-d34ef159aa3fa2d9","--out-dir","/Users/henrique/Documents/Dev/rust/pira/lib/piralib/target/rls/debug/deps","-L","dependency=/Users/henrique/Documents/Dev/rust/pira/lib/piralib/target/rls/debug/deps","--extern","num_traits=/Users/henrique/Documents/Dev/rust/pira/lib/piralib/target/rls/debug/deps/libnum_traits-a8a13dc2b6f5e15e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/henrique/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,68,111,99,117,109,101,110,116,115,47,68,101,118,47,114,117,115,116,47,112,105,114,97,47,108,105,98,47,112,105,114,97,108,105,98,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,97,112,112,114,111,120,45,100,51,52,101,102,49,53,57,97,97,51,102,97,50,100,57,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"approx","disambiguator":[7272058850793702934,11020385248463622845]},"crate_root":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src","external_crates":[{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[11032240498842541725,2432057140917246171]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[1895553238457761685,16857640017500260029]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":3,"id":{"name":"num_traits","disambiguator":[18318528556218879702,1718899475351660856]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[4389547861531967874,4087000726966765083]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15832230302727928541,9588802089311960002]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6716647803596312003,10833435238760970833]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4365380295245643280,9464345992969757060]}},{"file_name":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","num":8,"id":{"name":"panic_unwind","disambiguator":[6158679394116410202,17211381475699568518]}}],"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":597,"byte_end":11114,"line_start":15,"line_end":354,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6041,"byte_end":6050,"line_start":172,"line_end":172,"column_start":22,"column_end":31},"alias_span":null,"name":"AbsDiffEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6073,"byte_end":6083,"line_start":173,"line_end":173,"column_start":22,"column_end":32},"alias_span":null,"name":"RelativeEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6102,"byte_end":6108,"line_start":174,"line_end":174,"column_start":18,"column_end":24},"alias_span":null,"name":"UlpsEq","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":597,"byte_end":11114,"line_start":15,"line_end":354,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/henrique/.cargo/registry/src/github.com-1ecc6299db9ec823/approx-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":78},{"krate":0,"index":132},{"krate":0,"index":184},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":254}],"decl_id":null,"docs":" A crate that provides facilities for testing the approximate equality of floating-point\n based types, using either relative difference, or units in the last place (ULPs)\n comparisons.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5818,"byte_end":5824,"line_start":157,"line_end":157,"column_start":35,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":11350,"byte_end":11359,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AbsDiffEq","qualname":"::abs_diff_eq::AbsDiffEq","value":"AbsDiffEq: PartialEq","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32}],"decl_id":null,"docs":" Equality that is defined using the absolute difference of two numbers.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":11432,"byte_end":11439,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Epsilon","qualname":"::abs_diff_eq::AbsDiffEq::Epsilon","value":"type Epsilon;","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Used for specifying relative comparisons.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":11665,"byte_end":11680,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"default_epsilon","qualname":"::abs_diff_eq::AbsDiffEq::default_epsilon","value":"fn () -> Self::Epsilon","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" The default tolerance to use when testing values that are close together.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":11831,"byte_end":11842,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"abs_diff_eq","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_eq","value":"fn (&self, other: &Self, epsilon: Self::Epsilon) -> bool","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" A test for equality that uses the absolute difference to compute the approximate\n equality of two numbers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":11953,"byte_end":11964,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"abs_diff_ne","qualname":"::abs_diff_eq::AbsDiffEq::abs_diff_ne","value":"fn (&self, other: &Self, epsilon: Self::Epsilon) -> bool","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::abs_diff_eq`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":16457,"byte_end":16467,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"RelativeEq","qualname":"::relative_eq::RelativeEq","value":"RelativeEq: AbsDiffEq","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and\n relative based comparisons.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":16664,"byte_end":16684,"line_start":15,"line_end":15,"column_start":8,"column_end":28},"name":"default_max_relative","qualname":"::relative_eq::RelativeEq::default_max_relative","value":"fn () -> Self::Epsilon","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The default relative tolerance for testing values that are far-apart.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":16802,"byte_end":16813,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"relative_eq","qualname":"::relative_eq::RelativeEq::relative_eq","value":"fn (&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" A test for equality that uses a relative comparison if the values are far apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":16992,"byte_end":17003,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"relative_ne","qualname":"::relative_eq::RelativeEq::relative_ne","value":"fn (&self, other: &Self, epsilon: Self::Epsilon, max_relative: Self::Epsilon) -> bool","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::relative_eq`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":144},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":21967,"byte_end":21973,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"UlpsEq","qualname":"::ulps_eq::UlpsEq","value":"UlpsEq: AbsDiffEq","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150}],"decl_id":null,"docs":" Equality comparisons between two numbers using both the absolute difference and ULPs\n (Units in Last Place) based comparisons.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":22161,"byte_end":22177,"line_start":15,"line_end":15,"column_start":8,"column_end":24},"name":"default_max_ulps","qualname":"::ulps_eq::UlpsEq::default_max_ulps","value":"fn () -> u32","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The default ULPs to tolerate when testing values that are far-apart.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":22293,"byte_end":22300,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"ulps_eq","qualname":"::ulps_eq::UlpsEq::ulps_eq","value":"fn (&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" A test for equality that uses units in the last place (ULP) if the values are far apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":22422,"byte_end":22429,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"ulps_ne","qualname":"::ulps_eq::UlpsEq::ulps_ne","value":"fn (&self, other: &Self, epsilon: Self::Epsilon, max_ulps: u32) -> bool","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":" The inverse of `ApproxEq::ulps_eq`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":218},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6549,"byte_end":6556,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"AbsDiff","qualname":"::AbsDiff","value":"AbsDiff { epsilon }","parent":null,"children":[{"krate":0,"index":69}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n absolute difference based comparison.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":69},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6664,"byte_end":6671,"line_start":193,"line_end":193,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::AbsDiff::epsilon","value":"<T as abs_diff_eq::AbsDiffEq>::Epsilon","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7005,"byte_end":7012,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<AbsDiff<T>>::epsilon","value":"fn (self, epsilon: T::Epsilon) -> AbsDiff<T>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6984,"byte_end":6993,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7163,"byte_end":7165,"line_start":217,"line_end":217,"column_start":12,"column_end":14},"name":"eq","qualname":"<AbsDiff<T>>::eq","value":"fn (self, lhs: &T, rhs: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7142,"byte_end":7151,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7320,"byte_end":7322,"line_start":223,"line_end":223,"column_start":12,"column_end":14},"name":"ne","qualname":"<AbsDiff<T>>::ne","value":"fn (self, lhs: &T, rhs: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7299,"byte_end":7308,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8061,"byte_end":8069,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"Relative","qualname":"::Relative","value":"Relative { epsilon, max_relative }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using a\n relative based comparison.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8178,"byte_end":8185,"line_start":248,"line_end":248,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Relative::epsilon","value":"<T as abs_diff_eq::AbsDiffEq>::Epsilon","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":79},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8277,"byte_end":8289,"line_start":250,"line_end":250,"column_start":9,"column_end":21},"name":"max_relative","qualname":"::Relative::max_relative","value":"<T as abs_diff_eq::AbsDiffEq>::Epsilon","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" The relative tolerance for testing values that are far-apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8669,"byte_end":8676,"line_start":266,"line_end":266,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Relative<T>>::epsilon","value":"fn (self, epsilon: T::Epsilon) -> Relative<T>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8648,"byte_end":8657,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8857,"byte_end":8869,"line_start":272,"line_end":272,"column_start":12,"column_end":24},"name":"max_relative","qualname":"<Relative<T>>::max_relative","value":"fn (self, max_relative: T::Epsilon) -> Relative<T>","parent":null,"children":[],"decl_id":null,"docs":" Replace the maximum relative value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8836,"byte_end":8845,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9064,"byte_end":9066,"line_start":281,"line_end":281,"column_start":12,"column_end":14},"name":"eq","qualname":"<Relative<T>>::eq","value":"fn (self, lhs: &T, rhs: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9043,"byte_end":9052,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9240,"byte_end":9242,"line_start":287,"line_end":287,"column_start":12,"column_end":14},"name":"ne","qualname":"<Relative<T>>::ne","value":"fn (self, lhs: &T, rhs: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9219,"byte_end":9228,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9947,"byte_end":9951,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"Ulps","qualname":"::Ulps","value":"Ulps { epsilon, max_ulps }","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":89}],"decl_id":null,"docs":" The requisite parameters for testing for approximate equality using an ULPs\n based comparison.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":87},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10056,"byte_end":10063,"line_start":312,"line_end":312,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::Ulps::epsilon","value":"<T as abs_diff_eq::AbsDiffEq>::Epsilon","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" The tolerance to use when testing values that are close together.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":89},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10154,"byte_end":10162,"line_start":314,"line_end":314,"column_start":9,"column_end":17},"name":"max_ulps","qualname":"::Ulps::max_ulps","value":"u32","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" The ULPs to tolerate when testing values that are far-apart.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10524,"byte_end":10531,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<Ulps<T>>::epsilon","value":"fn (self, epsilon: T::Epsilon) -> Ulps<T>","parent":null,"children":[],"decl_id":null,"docs":" Replace the epsilon value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10503,"byte_end":10512,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10696,"byte_end":10704,"line_start":339,"line_end":339,"column_start":12,"column_end":20},"name":"max_ulps","qualname":"<Ulps<T>>::max_ulps","value":"fn (self, max_ulps: u32) -> Ulps<T>","parent":null,"children":[],"decl_id":null,"docs":" Replace the max ulps value with the one specified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10675,"byte_end":10684,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10844,"byte_end":10846,"line_start":345,"line_end":345,"column_start":12,"column_end":14},"name":"eq","qualname":"<Ulps<T>>::eq","value":"fn (self, lhs: &T, rhs: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the equality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10823,"byte_end":10832,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11012,"byte_end":11014,"line_start":351,"line_end":351,"column_start":12,"column_end":14},"name":"ne","qualname":"<Ulps<T>>::ne","value":"fn (self, lhs: &T, rhs: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Peform the inequality comparison\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10991,"byte_end":11000,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":14638,"byte_end":14642,"line_start":118,"line_end":118,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":14981,"byte_end":14988,"line_start":132,"line_end":132,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":19885,"byte_end":19889,"line_start":121,"line_end":121,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":20287,"byte_end":20294,"line_start":138,"line_end":138,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":24778,"byte_end":24782,"line_start":93,"line_end":93,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":25095,"byte_end":25102,"line_start":105,"line_end":105,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6728,"byte_end":6735,"line_start":196,"line_end":196,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6876,"byte_end":6883,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8347,"byte_end":8355,"line_start":253,"line_end":253,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8572,"byte_end":8580,"line_start":263,"line_end":263,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10209,"byte_end":10213,"line_start":317,"line_end":317,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10431,"byte_end":10435,"line_start":330,"line_end":330,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":11361,"byte_end":11370,"line_start":8,"line_end":8,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2362},"to":{"krate":0,"index":24}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":14638,"byte_end":14642,"line_start":118,"line_end":118,"column_start":47,"column_end":51},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":1,"index":3008},"to":{"krate":0,"index":24}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,97,98,115,95,100,105,102,102,95,101,113,46,114,115],"byte_start":14981,"byte_end":14988,"line_start":132,"line_end":132,"column_start":49,"column_end":56},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":1,"index":3084},"to":{"krate":0,"index":24}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":16469,"byte_end":16478,"line_start":11,"line_end":11,"column_start":23,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":24},"to":{"krate":0,"index":92}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":19885,"byte_end":19889,"line_start":121,"line_end":121,"column_start":49,"column_end":53},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":1,"index":3008},"to":{"krate":0,"index":92}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,114,101,108,97,116,105,118,101,95,101,113,46,114,115],"byte_start":20287,"byte_end":20294,"line_start":138,"line_end":138,"column_start":51,"column_end":58},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":1,"index":3084},"to":{"krate":0,"index":92}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":21975,"byte_end":21984,"line_start":11,"line_end":11,"column_start":19,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":24},"to":{"krate":0,"index":144}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":24778,"byte_end":24782,"line_start":93,"line_end":93,"column_start":41,"column_end":45},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":1,"index":3008},"to":{"krate":0,"index":144}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,117,108,112,115,95,101,113,46,114,115],"byte_start":25095,"byte_end":25102,"line_start":105,"line_end":105,"column_start":43,"column_end":50},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":1,"index":3084},"to":{"krate":0,"index":144}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6728,"byte_end":6735,"line_start":196,"line_end":196,"column_start":41,"column_end":48},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":218},"to":{"krate":1,"index":2584}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6876,"byte_end":6883,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8347,"byte_end":8355,"line_start":253,"line_end":253,"column_start":42,"column_end":50},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":232},"to":{"krate":1,"index":2584}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8572,"byte_end":8580,"line_start":263,"line_end":263,"column_start":30,"column_end":38},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10209,"byte_end":10213,"line_start":317,"line_end":317,"column_start":38,"column_end":42},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":248},"to":{"krate":1,"index":2584}},{"span":{"file_name":[47,85,115,101,114,115,47,104,101,110,114,105,113,117,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,112,112,114,111,120,45,48,46,51,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10431,"byte_end":10435,"line_start":330,"line_end":330,"column_start":26,"column_end":30},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}}]}